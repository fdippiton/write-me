@* @model List<WriteMe_MVC.ViewModels.PostViewModel> *@


@model X.PagedList.IPagedList<WriteMe_MVC.ViewModels.PostViewModel>
@using X.PagedList.Mvc.Core
@addTagHelper *, X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Home Page";
}

@{
    bool usuarioAutenticado = User.Identity.IsAuthenticated;
}

@using System.Security.Claims

<div class="" style="">
    <div style="height: 10px; background-color:#095c30; width: 100%"></div>
    
    <div class="row d-flex justify-content-evenly" style=" margin-bottom: 60px;
    background-image: url('/assets/writing_green_2.png') !important;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover; width: 99.7vw">
    
        <div class="col-10" style="padding-bottom: 200px;">
            <h6 class=" text-white text-start " style="font-family: 'Noto Serif Balinese', serif; font-size: 70px; margin-top: 150px; ">Escribe, lee e inspira.  </h6>
            <h6 class=" text-white text-start " style="font-family: 'Noto Serif Balinese', serif; font-size: 20px; ">Cambia el mundo con cada palabra.</h6>
            @if (!usuarioAutenticado)
            {
                <div class="">
                    <a class="btn  text-white px-3" style="font-size:14px; background-color: black;" asp-area="" asp-controller="Usuarios" asp-action="IniciarSesion">Crear articulo</a>
                </div>

            } else
            {
                <div class="" style="">
                    <a class="btn  text-white px-4" style=" font-size:14px; background-color: black" asp-area="" asp-controller="Posts" asp-action="Create">Crear articulo</a>
                </div>
            }
        </div>

    </div>

    <div class="container mb-5" style=" ">
        @functions {
            string Truncate(string value, int length)
            {
                if (value.Length <= length)
                {
                    return value;
                }
                else
                {
                    return value.Substring(0, length) + " ...";
                }
            }
        }

        <div class="row mb-3">
            <div class="row d-flex justify-content-center">
                <form method="get" asp-action="Index" asp-controller="Home">
                    <div class="mb-3 d-flex">
                        <label for="categoria" class="form-labe fw-bolder" style="font-size:13px">Filtrar por facultad:</label>
                        <select id="categoria" name="categoria" class="form-select" style="font-size: 13px">
                            <option value="" >Todas las categorías</option>
                            @foreach (var categoria in Model.Select(post => post.PostCategoriaNombre).Distinct())
                            {
                                <option value="@categoria">@categoria</option>
                            }
                        </select>
                        <button type="submit" class="btn ms-3 text-white" style="background-color: #30915b; font-size: 13px">Filtrar</button>
                    </div>
                </form>
            </div>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="row pb-5">
                <h2 class="mb-5 fs-3" style="">Articulos que te pueden interesar ...</h2>
                @foreach (var post in Model)
                {
                    <div class="col-4 mb-3" >
                        <a href="@Url.Action("PublicPostDetails", "Posts", new { id = post.PostId })" class="text-decoration-none text-black" style="display: block; position: relative;">
                            <div class="card mb-2 " style="box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px, rgba(0, 0, 0, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px; transition: background-color 0.3s, color 0.3s; border-radius: 5px">
                                <div class="card-body">
                                    <h6 style="font-size:12px" class="mb-1">@post.PostUsuarioNombre ▪ @post.PostFechaPublicacion.ToShortDateString()</h6>
                                    <h5 class="card-title mb-0">@post.PostTitulo</h5>
                                    <p class="card-text mb-1" style="font-size:13px;">@Truncate(post.PostContenido, 60)</p>
                                    <p class="card-text mb-1 px-3" style="font-size:12px; width:fit-content; background-color: rgb(25, 135, 84, 0.5)">#@post.PostCategoriaNombre</p>
                                </div>
                            </div>
                        </a>
                        <style>
                            /* Estilo para el hover */
                            .text-decoration-none:hover .card {
                                background-color: #252525;
                                color: white;
                            }
                        </style>
                    </div>
                }
            </div>

@*             <div class="d-flex justify-content-center">
                <div class="pagination-container">
                    @(Html.PagedListPager(Model, page => Url.Action("Index", new { page, categoria = Context.Request.Query["categoria"] })))
                </div>
            </div> *@

@*             <div class="d-flex justify-content-center">
                <ul class="pagination d-flex align-items-center">
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")" style="font-size:13px;">
                        <a class="page-link " href="@Url.Action("Index", new { page = 1, categoria = Context.Request.Query["categoria"] })">Primero</a>
                    </li>
                    <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")" >
                        <a class="page-link text-dark" href="@Url.Action("Index", new { page = Model.PageNumber - 1, categoria = Context.Request.Query["categoria"] })"><i class="bi bi-arrow-left-circle-fill text-success" style="font-size: 1.5rem;"></i></a>
                    </li>
                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link " href="@Url.Action("Index", new { page = i, categoria = Context.Request.Query["categoria"] })">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.PageNumber >= Model.PageCount ? "disabled" : "")">
                        <a class="page-link text-dark" href="@Url.Action("Index", new { page = Model.PageNumber + 1, categoria = Context.Request.Query["categoria"] })"><i class="bi bi-arrow-right-circle-fill  text-success" style="font-size: 1.5rem;"></i></a>
                    </li>
                    <li class="page-item  @(Model.PageNumber == Model.PageCount ? "disabled" : "")" style="font-size:13px;">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, categoria = Context.Request.Query["categoria"] })">Último</a>
                    </li>
                </ul>
            </div> *@

            <style>
                .pagination {
                    list-style: none;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }

                .page-item {
                    margin: 0 5px;
                }

                .page-link {
                    color: #30915b;
                    background-color: #fff; /* Fondo blanco para los enlaces */
                    border: 1px solid #30915b;
                }

                    .page-link:hover {
                        color: #fff;
                        background-color: #30915b; /* Cambia el color de fondo al pasar el ratón */
                        border: 1px solid #30915b;
                    }

                .page-item.active .page-link {
                    color: #fff;
                    background-color: #252525; /* Fondo para el número activo */
                    border: 1px solid #252525;
                }

                .page-item.disabled .page-link {
                    color: #888;
                    background-color: #fff;
                    border: 1px solid #ddd;
                }

                .page-link i {
                    font-size: 1.5rem;
                }

                .success {
                    color: #252525;
                }
            </style>

            <div class="d-flex justify-content-center">
                <ul class="pagination" style="font-size:12px;">
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")" >
                        <a class="page-link" href="@Url.Action("Index", new { page = 1, categoria = Context.Request.Query["categoria"] })">Primero</a>
                    </li>
                    <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
                        <a class="page-link text-dark" href="@Url.Action("Index", new { page = Model.PageNumber - 1, categoria = Context.Request.Query["categoria"] })"><i class="bi bi-arrow-left-circle-fill success"></i></a>
                    </li>
                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, categoria = Context.Request.Query["categoria"] })">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.PageNumber >= Model.PageCount ? "disabled" : "")">
                        <a class="page-link text-dark" href="@Url.Action("Index", new { page = Model.PageNumber + 1, categoria = Context.Request.Query["categoria"] })"><i class="bi bi-arrow-right-circle-fill success"></i></a>
                    </li>
                    <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, categoria = Context.Request.Query["categoria"] })">Último</a>
                    </li>
                </ul>
            </div>

        } else
        {
             <p>No hay artículos disponibles.</p>
        }

    </div>
</div>









<script>
    function Truncate(text, length) {
        return text.length > length ? text.substring(0, length) + "..." : text;
    }

    function expandContent(postId) {
        var contentElement = document.getElementById("postContent-" + postId);
        var fullContent = /* Obtén el contenido completo del servidor o de donde lo tengas */
        contentElement.innerText = fullContent;
    }
</script>
